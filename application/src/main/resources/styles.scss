$primaryBlue: #1bbae2;
$primaryGold: #dcab06;

$darkText: #111;
$lightText: #eee;

$bronze: #C68A6B;
$silver: #BDDBDE;
$gold: #EFD377;
$dirt: #918888;

$sliderColor: $primaryGold;
$sliderBackgroundColor: #efefef;
$sliderBorderColor: #b2b2b2;

$chromatic-desaturation-amount: 50%;
$chromatic: conic-gradient(
  desaturate(#B5FFB5, $chromatic-desaturation-amount),
  desaturate(#A5FBF7, $chromatic-desaturation-amount),
  desaturate(#ADB6FF, $chromatic-desaturation-amount),
  desaturate(#EF9EFF, $chromatic-desaturation-amount),
  desaturate(#ADFBFF, $chromatic-desaturation-amount),
  desaturate(#FFFFF7, $chromatic-desaturation-amount),
  desaturate(#FFFFCE, $chromatic-desaturation-amount),
  desaturate(#FFB294, $chromatic-desaturation-amount),
  desaturate(#BDF7B5, $chromatic-desaturation-amount), // half
  desaturate(#C8B6EF, $chromatic-desaturation-amount),
  desaturate(#D6EBFF, $chromatic-desaturation-amount),
  desaturate(#ADFFE7, $chromatic-desaturation-amount),
  desaturate(#ADFFBD, $chromatic-desaturation-amount),
  desaturate(#FFFFEF, $chromatic-desaturation-amount),
  desaturate(#FFFFBD, $chromatic-desaturation-amount),
  desaturate(#A5FFF7, $chromatic-desaturation-amount),
  desaturate(#F78EFF, $chromatic-desaturation-amount),
  desaturate(#B5FFB5, $chromatic-desaturation-amount)
);
$colors: ("dirt": $dirt, "bronze": $bronze, "silver": $silver, "gold": $gold, "chromatic": $chromatic);

$roles: ace admin aegis animasquad arsenal brawler civilian corrupted defender duelist forecaster gadgeteen hacker heart lasercorps mascot mechaprime oxforce prankster recon renegade spellslinger starguardian supers sureshot threat underground;
$champions: alistar annie aphelios ashe aurelionsol belveth blitzcrank camille chogath draven ekko ezreal fiddlesticks fiora galio gangplank janna jax jinx kaisa kayle leblanc leesin leona lulu lux malphite missfortune mordekaiser nasus nilah nunu poppy rammus rell renekton riven samira sejuani senna sett sivir sona soraka sylas syndra taliyah talon urgot vayne velkoz vi viego wukong yasuo yuumi zac zed zoe;

$hexagon-mask: url('data:image/svg+xml;utf8,<svg width="100%" height="100%" viewBox="0 0 292 334" version="1.1" xmlns="http://www.w3.org/2000/svg"><path d="M146.208,4.118l141.715,81.058l0,162.693l-141.715,81.347l-141.716,-81.347l0,-162.693l141.716,-81.058Z"/><path d="M146.208,4.118l141.715,81.058l0,162.693l-141.715,81.347l-141.716,-81.347l0,-162.693l141.716,-81.058Zm-0,24l120.882,69.142c-0,0 -0,138.546 -0,138.546c-0,0 -120.882,69.388 -120.882,69.388c-0,0 -120.883,-69.388 -120.883,-69.388c0,0 0,-138.546 0,-138.546l120.883,-69.142Z"/></svg>');
@function hexagon-shape($svg-stroke-color-string) {
  @return url('data:image/svg+xml;utf8,<svg viewBox="0 0 292 334" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2;"><path d="M145.833,0l145.834,83.112l-0,166.814l-145.834,83.407l-145.833,-83.407l-0,-166.814l145.833,-83.112Zm0,23.979l125,71.239c0,-0.001 0,142.623 0,142.623c0,0 -125,71.492 -125,71.492c0,0 -125,-71.492 -125,-71.492c0,0 0,-142.623 0,-142.623l125,-71.239Z" fill="#{$svg-stroke-color-string}"/></svg>');
}

$titleFont: Corbel, Avenir, Sans-Serif;
$bodyFont: Calibri, Helvetica, Sans-Serif;


html {
  font-size: 62.5%; // 1rem = 10px
  background: rgba($primaryBlue, 0.075);
  min-height: 100%;
  color: $darkText;
  font-family: $bodyFont;
  box-sizing: border-box;
}

*, *:before, *:after {
  box-sizing: inherit;
}

body {
  margin: 0;
  padding: 1rem;
  font-size: 1.6rem;
  min-width: 32rem; // 1 * 300rem card width + 2 * 1rem padding
}

h1, h2, h3, h4, h5, h6 {
  font-family: $titleFont;
}

h1 {
  color: $primaryGold;
  -webkit-text-stroke-width: 0.05rem;
  -webkit-text-stroke-color: black;
  background: center left / 6.4rem url("favicon.png") no-repeat;
  padding-left: 7.4rem;
  display: flex;
  align-items: center;
  min-height: 6.4rem;
  margin-top: 0;
  margin-bottom: 1.5rem;

  font-size: 2.75rem;

  @media (min-width: (54em * 0.625)) {
    background: center left / 12.8rem url("favicon.png") no-repeat;
    padding-left: 13.8rem;
    min-height: 12.8rem;
    font-size: 3.5rem;
  }

  @media (min-width: (105em * 0.625)) {
    font-size: 5rem;
  }

  @media (min-width: (156em * 0.625)) {
    font-size: 6.5rem;
  }
}

i > i {
  font-style: normal;
}

progress {
  -webkit-appearance: none;
  height: 1.6rem;

  position: relative;

  &::-webkit-progress-bar {
    height: 0.8rem;
    border: 0.001rem solid $sliderBorderColor;
    border-radius: 0.8rem;
    background: $sliderBackgroundColor;
    position: absolute;
    left: 0;
    top: 50%;
    transform: translate(0, -50%);
  }

  &::-webkit-progress-value {
    background: $sliderColor;
    border-radius: 0.8rem;
  }

  @supports (-moz-appearance:none) {
    height: 0.8rem;
    border-radius: 0.8rem;
    background: $sliderBackgroundColor;
    border: 0.1rem solid $sliderBorderColor;
    margin: 0.4rem 0;
  }

  &::-moz-progress-bar {
    background: $sliderColor;
    border-radius: 0.8rem;
  }
}

input[type=range] {
  -webkit-appearance: none;
  height: 1.6rem;
  background: transparent;

  position: relative;

  // Chrome doesn't properly render slider track borders in combination w/ the thumb, therefore I have to improvise.
  &:after {
    content: '';
    display: block;
    width: 100%;
    height: 0.8rem;

    border: 0.001rem solid $sliderBorderColor;
    border-radius: 1.6rem;
    background: linear-gradient(to left, $sliderBackgroundColor calc(100% - var(--percentage)), $sliderColor calc(100% - var(--percentage)));

    position: absolute;
    top: 50%;
    left: 0;
    transform: translate(0, -50%);
    z-index: -1;
  }

  &::-webkit-slider-runnable-track {
    -webkit-appearance: none;
    height: 0.8rem;
  }

  &::-webkit-slider-thumb {
    -webkit-appearance: none;
    width: 1.6rem;
    height: 1.6rem;
    border-radius: 50%;
    background: $sliderColor;
    margin-top: -1.6rem/2 + 0.8rem/2;

    border: 0.001rem solid $sliderBorderColor;
    background: $sliderBackgroundColor;
 }

 &::-moz-range-track {
    height: 0.6rem;
    border: 0.001rem solid $sliderBorderColor;
    border-radius: 1.6rem;
    background: linear-gradient(to left, $sliderBackgroundColor calc(100% - var(--percentage)), $sliderColor calc(100% - var(--percentage)));
 }

 &::-moz-range-thumb {
    width: 1.4rem;
    height: 1.4rem;
    border-radius: 50%;
    background: $sliderColor;
    margin-top: -0.45rem;

    border: 0.001rem solid $sliderBorderColor;
    background: $sliderBackgroundColor;
 }

  &:hover {
    &:after {
      background: linear-gradient(to left, scale-color($sliderBackgroundColor, $lightness: -5%) calc(100% - var(--percentage)), scale-color($sliderColor, $lightness: -5%) calc(100% - var(--percentage)));
    }

    &::-moz-range-track {
      background: linear-gradient(to left, scale-color($sliderBackgroundColor, $lightness: -5%) calc(100% - var(--percentage)), scale-color($sliderColor, $lightness: -5%) calc(100% - var(--percentage)));
    }
  }

  &:active {
    &::-webkit-slider-thumb {
      background: scale-color($sliderBackgroundColor, $lightness: 75%);
    }

    &::-moz-range-thumb {
      background: scale-color($sliderBackgroundColor, $lightness: 75%);
    }
  }
}


#app {
  // page width = 2 * 1rem body padding, x * 1rem result card gap, 50rem result card width, 2rem scroll bar width
  // app width = page width - body padding - scroll bar width

  // 50rem+ min-width: build grid around result card size, ie 1, 2, 3 result cards in a row

  min-width: 30rem;

  @media (min-width: (54em * 0.625)) {
    width: 50rem;
  }

  @media (min-width: (105em * 0.625)) {
    width: 101rem;
  }

  @media (min-width: (156em * 0.625)) {
    width: 152rem;
  }

  margin: auto;
  overflow: hidden;
}

.number-slider {
  margin-bottom: 0.5rem;
  display: flex;
  gap: 1rem;
  align-items: center;

  .title {
    min-width: 14.5rem;
    max-width: 16rem;
    flex-grow: 1;
  }

  .input {
    min-width: 11rem;
    max-width: 12.5rem;
    flex-grow: 1
  }

  .value {
    width: 2.5rem;
  }
}

.role-filter {
  margin-bottom: 0.5rem;

  .title {
    min-width: 16rem;
    margin-bottom: 0.5rem;
  }

  .options {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(14.5rem, 1fr));
    gap: 0.5rem 1rem;
    width: 100%;
  }

  .role {
    white-space: nowrap;

    label {
      display: block;
      padding-left: 3.5rem;
      position: relative;

      input {
        margin: 0;
        width: 100%;
        display: block;
      }

      &:after {
        content: '';
        background: $darkText;
        -webkit-mask: left center / 3rem auto url("traits.png") no-repeat;

        width: 3rem;
        height: 3rem;

        position: absolute;
        left: 0;
        top: 50%;
        transform: translate(0, -50%);
      }
    }

    @for $i from 1 through length($roles) {
      $role: nth($roles, $i);

      &.#{$role} label:after {
        -webkit-mask-position: 0 (-3rem * ($i - 1));
      }
    }

    &.is-changed, &:hover {
      text-shadow: 0 0 0.5rem $primaryGold;
    }

    &.is-changed {
      font-weight: bold;
    }
  }
}

.champion-filter {
  margin-bottom: 0.5rem;

  .title {
    min-width: 16rem;
    margin-bottom: 0.5rem;
  }

  .options {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(14.5rem, 1fr));
    gap: 0.5rem 1rem;
    width: 100%;
  }

  .champion {
    display: block;

    background: left center / 3rem auto url("champions.png") no-repeat;
    padding-left: 3.5rem;
    line-height: 3rem;

    @for $i from 1 through length($champions) {
      $champion: nth($champions, $i);

      &.#{$champion} {
        background-position: 0 (-3rem * ($i - 1));
      }
    }

    &.is-selected, &:hover {
      text-shadow: 0 0 0.5rem $primaryGold;
    }

    &.is-selected {
      font-weight: bold;
    }

    input {
      display: none;
    }
  }
}

.results {
  margin-bottom: 2rem;

  progress {
    display: block;
    width: 100%;
  }

  .description {
    margin: 3rem 0 0;
  }

  .distribution {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    align-content: flex-start;
    height: 3.2rem;
    margin: 0 0 2rem;
    overflow: hidden;

    dt {
      width: 10rem;
      height: 1.6rem;
      font-weight: bold;
    }

    dd {
      width: 10rem;
      height: 1.6rem;
      margin: 0;
    }
  }
}

.compositions {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;

  list-style: none;
  padding-left: 0;
  margin: 0;
}

.composition {
  display: flex;
  align-items: stretch;
  flex-direction: column;

  @media (min-width: (54em * 0.625)) {
    flex-direction: row;
  }

  height: 100%;

  position: relative;
  overflow: hidden;

  border: 0.1rem solid #000;
  border-radius: 0.5rem;

  font-family: $titleFont;

  .synergy {
    position: absolute;
    transform: rotate(45deg);
    width: 10rem;
    text-align: center;
    top: -1.1rem;
    right: -3rem;
    background: scale-color($primaryBlue, $lightness: -5%);
    text-shadow: 0.1rem 0.1rem black;
    color: $lightText;
    z-index: 1;
    outline: 0.1rem solid #000;

    small {
      display: none;
    }
  }

  .composition-roles {
    padding: 1rem;
    list-style: none;

    display: flex;
    flex-wrap: wrap;
    align-content: flex-start;
    gap: 0.2rem;

    @media (min-width: (54em * 0.625)) {
      padding: 1rem 2rem;
      width: 19rem - 0.1rem;

      flex-direction: column;
    }

    background: scale-color($primaryBlue, $lightness: 70%);
    color: $darkText;

    .role {
      position: relative;

      font-size: 1.6rem;
      text-indent: 4.5rem;
      text-align: left;
      white-space: nowrap;

      width: calc(50% - 1rem);

      height: 4rem;
      line-height: 4rem;

      @media (min-width: (54em * 0.625)) {
        width: auto;
      }

      &:before {
        content: ' ';

        -webkit-mask: $hexagon-mask no-repeat center;
        background: hexagon-shape("black") no-repeat center, $dirt;

        width: 4rem;
        height: 4rem;

        position: absolute;
        top: 50%;
        left: 0;
        transform: translate(0, -50%) scale(0.95);
      }

      &:after {
        content: ' ';
        background: $darkText;
        -webkit-mask: left center / 4rem auto url("traits.png") no-repeat;

        width: 4rem;
        height: 4rem;

        position: absolute;
        left: 0;
        top: 50%;
        transform: translate(0, -50%) scale(0.5);
      }

      @for $i from 1 through length($roles) {
        $role: nth($roles, $i);

        &.#{$role}:after {
          -webkit-mask-position: 0 (-4rem * ($i - 1));
        }
      }

      @each $name, $color in $colors {
        &.#{$name}:before {
          background: hexagon-shape("black") no-repeat center, $color;
        }
      }

      &.is-required {
        text-shadow: 0 0 0.5rem #dcab06;
        font-weight: bold;
      }
    }
  }

  .champions {
    display: flex;
    flex-direction: column;
    gap: 0.2rem;

    list-style: none;

    padding: 1rem;

    @media (min-width: (54em * 0.625)) {
      padding: 1rem 2rem;
    }

    background-color: #222;

    .champion {
      display: flex;

      background: 0 / 4rem url("champions.png") no-repeat;

      @for $i from 1 through length($champions) {
        $champion: nth($champions, $i);

        &.#{$champion} {
          background-position-y: (-4rem * ($i - 1));
        }
      }

      .name, .champion-roles {
        color: $lightText;
        margin: 0;
        line-height: 4rem;
        font-size: 2rem;
      }

      .name {
        text-indent: calc(4rem + 0.3rem);
        width: calc(50% - 1rem);

        @media (min-width: (54em * 0.625)) {
          width: 15rem - 0.1rem;
        }

        font-size: 1.6rem;
        font-weight: normal;
        white-space: nowrap;
        line-height: 4rem;
      }

      &.is-required .name {
        text-shadow: 0 0 0.5rem $primaryGold;
        font-weight: bold;
      }

      .champion-roles {
        width: 12rem;
        display: flex;
        padding-left: 0;

        .role {
          position: relative;

          font-size: 0;
          text-align: left;
          width: 4rem;
          height: 4rem;
          list-style: none;

          &.is-required {
            text-shadow: 0 0 0.5rem #dcab06;
            font-weight: bold;

            &:before {
              filter: drop-shadow(0 0 0.5rem scale-color($primaryGold, $alpha: -30%));
            }
          }

          &:before {
            content: ' ';

            background: center no-repeat hexagon-shape("%23555");

            text-indent: 0;
            width: 4rem;
            height: 4rem;

            position: absolute;
            top: 50%;
            left: 0;
            transform: translate(0, -50%) scale(0.95);
          }

          &:after {
            content: ' ';
            background: $lightText;
            -webkit-mask: left center / 4rem auto url("traits.png") no-repeat;

            width: 4rem;
            height: 4rem;

            position: absolute;
            left: 0;
            top: 50%;
            transform: translate(0, -50%) scale(0.5);
          }

          @for $i from 1 through length($roles) {
            $role: nth($roles, $i);

            &.#{$role}:after {
              -webkit-mask-position: 0 (-4rem * ($i - 1));
            }
          }
        }
      }
    }
  }
}

footer {
  margin-bottom: 1rem;
}